// Copyright (c) Contributors to the SPK project.
// SPDX-License-Identifier: Apache-2.0
// https://github.com/spkenv/spk
syntax = "proto3";

package spfs;

import "error.proto";
import "types.proto";
import "database.proto";

message HasPayloadRequest{
    Digest digest = 1;
}
message HasPayloadResponse{
    // we no longer return error messages for these
    // requests as the client api simply flattens them
    // into a boolean anyway
    // oneof result {
    //     Error error = 1;
    //     bool ok = 2;
    // }
    bool exists =3;
}

message PayloadSizeRequest{
    Digest digest = 1;
}
message PayloadSizeResponse{
    oneof result {
        Error error = 1;
        uint64 ok = 2;
    }
}

message WritePayloadRequest{}
message WritePayloadResponse{
    message UploadOption {
        string url = 1;
    }
    // This message is not part of the grpc interface,
    // but is the expected response data for http uploads
    message UploadResponse {
        message UploadResult {
            Digest digest = 1;
            uint64 size = 2;
        }
        oneof result {
            Error error = 1;
            UploadResult ok = 2;
        }
    }
    oneof result {
        Error error = 1;
        UploadOption ok = 2;
    }
}

message OpenPayloadRequest{
    Digest digest = 1;
}
message OpenPayloadResponse{
    message DownloadOption {
        repeated string locations = 1;
    }
    oneof result {
        Error error = 1;
        DownloadOption ok = 2;
    }
}

message RemovePayloadRequest{
    Digest digest = 1;
}
message RemovePayloadResponse{
    oneof result {
        Error error = 1;
        Ok ok = 2;
    }
}

service PayloadService {
    rpc IterDigests(IterDigestsRequest) returns (stream IterDigestsResponse);
    rpc HasPayload(HasPayloadRequest) returns (HasPayloadResponse);
    rpc PayloadSize(PayloadSizeRequest) returns (PayloadSizeResponse);
    rpc WritePayload(WritePayloadRequest) returns (WritePayloadResponse);
    rpc OpenPayload(OpenPayloadRequest) returns (OpenPayloadResponse);
    rpc RemovePayload(RemovePayloadRequest) returns (RemovePayloadResponse);
}
