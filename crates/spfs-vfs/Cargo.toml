[package]
authors = { workspace = true }
edition = { workspace = true }
name = "spfs-vfs"
version = { workspace = true }
license-file = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
readme = { workspace = true }
description = { workspace = true }

[lints]
workspace = true

[features]
default = []
winfsp-backend = [
    "dep:tonic",
    "dep:prost",
    "dep:futures-core",
    "dep:winfsp",
    "dep:winfsp-sys",
    "dep:windows",
]
fuse-backend = ["spfs/fuse-backend", "dep:fuser"]
fuse-backend-abi-7-22 = ["fuse-backend", "fuser/abi-7-22"]
fuse-backend-abi-7-25 = ["fuse-backend-abi-7-22", "fuser/abi-7-25"]
fuse-backend-abi-7-28 = ["fuse-backend-abi-7-25", "fuser/abi-7-28"]
fuse-backend-abi-7-31 = ["fuse-backend-abi-7-28", "fuser/abi-7-31"]
fuse-backend-rhel-7-6 = ["fuse-backend-abi-7-22"]
fuse-backend-rhel-7-9 = ["fuse-backend-abi-7-31"]

[dependencies]
bytes = { workspace = true }
clap = { workspace = true }
dashmap = { workspace = true }
futures-core = { workspace = true, optional = true }
nix = { workspace = true, features = ["process"] }
libc = "0.2"
miette = { workspace = true, features = ["fancy"] }
prost = { workspace = true, optional = true }
spfs = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["rt", "rt-multi-thread"] }
tracing = { workspace = true }
tonic = { workspace = true, optional = true }
url = "2.2"

[target.'cfg(unix)'.dependencies]
fuser = { workspace = true, optional = true }

[target.'cfg(windows)'.dependencies]
winfsp = { workspace = true, optional = true, default-features = false, features = [
    "notify",
    "delayload",
    "system",
] }
winfsp-sys = { workspace = true, optional = true }
windows = { workspace = true, optional = true, features = [
    "Win32_Storage_FileSystem",
    "Win32_Foundation",
    "Win32_Security",
    "Win32_Security_Authorization",
    "Win32_System_Registry",
    "Win32_System_Diagnostics_ToolHelp",
] }

[build-dependencies]
protobuf-src = { version = "1.0.5", optional = true } # protoc @ 3.19.3
tonic-build = { workspace = true }
